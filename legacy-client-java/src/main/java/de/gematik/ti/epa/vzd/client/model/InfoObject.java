/*
 * I_Directory_Administration
 * REST Schnittstelle zur Pflege der Verzeichniseinträge. Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich.
 *
 * The version of the OpenAPI document: 1.6.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.gematik.ti.epa.vzd.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.net.URI;
import java.util.Objects;

/**
 * InfoObject
 */

public class InfoObject {

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TERMS_OF_SERVICE = "termsOfService";
  @SerializedName(SERIALIZED_NAME_TERMS_OF_SERVICE)
  private URI termsOfService;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private Contact contact;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private License license;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;


  public InfoObject title(String title) {

    this.title = title;
    return this;
  }

  /**
   * Der Titel der Anwendung
   *
   * @return title
   **/
  @ApiModelProperty(example = "I_Directory_Administration", required = true, value = "Der Titel der Anwendung")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public InfoObject description(String description) {

    this.description = description;
    return this;
  }

  /**
   * Eine kurze Beschreibung der Anwendung
   *
   * @return description
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "REST Schnittstelle zur Pflege der Verzeichniseinträge. Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich.", value = "Eine kurze Beschreibung der Anwendung")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public InfoObject termsOfService(URI termsOfService) {

    this.termsOfService = termsOfService;
    return this;
  }

  /**
   * Eine URL zu den Terms of Service für dieses API.
   *
   * @return termsOfService
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://example.com/terms/", value = "Eine URL zu den Terms of Service für dieses API.")

  public URI getTermsOfService() {
    return termsOfService;
  }


  public void setTermsOfService(URI termsOfService) {
    this.termsOfService = termsOfService;
  }


  public InfoObject contact(Contact contact) {

    this.contact = contact;
    return this;
  }

  /**
   * Get contact
   *
   * @return contact
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Contact getContact() {
    return contact;
  }


  public void setContact(Contact contact) {
    this.contact = contact;
  }


  public InfoObject license(License license) {

    this.license = license;
    return this;
  }

  /**
   * Get license
   *
   * @return license
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public License getLicense() {
    return license;
  }


  public void setLicense(License license) {
    this.license = license;
  }


  public InfoObject version(String version) {

    this.version = version;
    return this;
  }

  /**
   * Die Version von dem OpenAPI Document (YAML Datei)
   *
   * @return version
   **/
  @ApiModelProperty(example = "1.6.0", required = true, value = "Die Version von dem OpenAPI Document (YAML Datei)")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfoObject infoObject = (InfoObject) o;
    return Objects.equals(this.title, infoObject.title) &&
        Objects.equals(this.description, infoObject.description) &&
        Objects.equals(this.termsOfService, infoObject.termsOfService) &&
        Objects.equals(this.contact, infoObject.contact) &&
        Objects.equals(this.license, infoObject.license) &&
        Objects.equals(this.version, infoObject.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, termsOfService, contact, license, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfoObject {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    termsOfService: ").append(toIndentedString(termsOfService)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

